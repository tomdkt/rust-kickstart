services:
  # ClickHouse - Telemetry data storage for SigNoz
  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: signoz-clickhouse
    restart: unless-stopped
    environment:
      CLICKHOUSE_DB: signoz_traces
    healthcheck:
      test: [ 'CMD', 'wget', '--spider', '-q', 'localhost:8123/ping' ]
      interval: 1s
      timeout: 1s
      retries: 10
      start_period: 2s
    volumes:
      - signoz_clickhouse_data:/var/lib/clickhouse
    ports:
      - "8123:8123"   # HTTP interface
      - "9000:9000"   # Native interface
    networks:
      - signoz-network

  # SigNoz Query Service
  query-service:
    image: signoz/query-service:0.39.0
    container_name: signoz-query-service
    restart: unless-stopped
    environment:
      - ClickHouseUrl=tcp://clickhouse:9000
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
    ports:
      - "8080:8080"   # Query service API
    volumes:
      - signoz_query_service_data:/var/lib/signoz
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - signoz-network
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/v1/health" ]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s

  # SigNoz Frontend
  frontend:
    image: signoz/frontend:0.39.0
    container_name: signoz-frontend
    restart: unless-stopped
    environment:
      - FRONTEND_API_ENDPOINT=http://query-service:8080
    ports:
      - "3301:3301"   # SigNoz UI
    depends_on:
      query-service:
        condition: service_healthy
    networks:
      - signoz-network

  # SigNoz OTel Collector
  otel-collector-signoz:
    image: signoz/signoz-otel-collector:0.88.11
    container_name: signoz-otel-collector
    restart: unless-stopped
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=host.name=signoz-host,os.type=linux
      - DOCKER_MULTI_NODE_CLUSTER=false
      - LOW_CARDINAL_EXCEPTION_GROUPING=false
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - signoz-network

  # OpenTelemetry Collector - for advanced routing
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: otel-collector
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-contrib/otel-collector.yaml" ]
    volumes:
      - ./otelcol-config.yaml:/etc/otelcol-contrib/otel-collector.yaml:ro
    ports:
      - "4315:4317"   # OTLP gRPC receiver (different port to avoid conflict)
      - "4316:4318"   # OTLP HTTP receiver (different port to avoid conflict)
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
    depends_on:
      otel-collector-signoz:
        condition: service_started
    networks:
      - signoz-network

volumes:
  signoz_clickhouse_data:
  signoz_query_service_data:

networks:
  signoz-network:
    name: signoz-network
    driver: bridge